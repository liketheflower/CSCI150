"""

output of this program when n is 4:

Enter the checkboard size n: 4
snake1_head, snake1_tail, counter_snake2
 16  15  49
 16  13  36
 16  11  25
 16   9  16
 16   7   9
 16   5   4
 16   3   1
 15  14  42
 15  12  30
 15  10  20
 15   8  12
 15   6   6
 15   4   2
 14  13  36
 14  11  25
 14   9  16
 14   7   9
 14   5   4
 14   3   1
 13  12  30
 13  10  20
 13   8  12
 13   6   6
 13   4   2
 12  11  25
 12   9  16
 12   7   9
 12   5   4
 12   3   1
 11  10  20
 11   8  12
 11   6   6
 11   4   2
 10   9  16
 10   7   9
 10   5   4
 10   3   1
  9   8  12
  9   6   6
  9   4   2
  8   7   9
  8   5   4
  8   3   1
  7   6   6
  7   4   2
  6   5   4
  6   3   1
  5   4   2
  4   3   1
We can put  64.0 different one snakes if the checkboard size is  4
We can put  588 different two snakes if the checkboard size is  4



when n =8

Enter the checkboard size n: 8
snake1_head, snake1_tail, counter_snake2
 64  63 961
 64  61 900
 64  59 841
 64  57 784
 64  55 729
 64  53 676
 64  51 625
 64  49 576
 64  47 529
 64  45 484
 64  43 441
 64  41 400
 64  39 361
 64  37 324
 64  35 289
 64  33 256
 64  31 225
 64  29 196
 64  27 169
 64  25 144
 64  23 121
 64  21 100
 64  19  81
 64  17  64
 64  15  49
 64  13  36
 64  11  25
 64   9  16
 64   7   9
 64   5   4
 64   3   1
 63  62 930
 63  60 870
 63  58 812
 63  56 756
 63  54 702
 63  52 650
 63  50 600
 63  48 552
 63  46 506
 63  44 462
 63  42 420
 63  40 380
 63  38 342
 63  36 306
 63  34 272
 63  32 240
 63  30 210
 63  28 182
 63  26 156
 63  24 132
 63  22 110
 63  20  90
 63  18  72
 63  16  56
 63  14  42
 63  12  30
 63  10  20
 63   8  12
 63   6   6
 63   4   2
 62  61 900
 62  59 841
 62  57 784
 62  55 729
 62  53 676
 62  51 625
 62  49 576
 62  47 529
 62  45 484
 62  43 441
 62  41 400
 62  39 361
 62  37 324
 62  35 289
 62  33 256
 62  31 225
 62  29 196
 62  27 169
 62  25 144
 62  23 121
 62  21 100
 62  19  81
 62  17  64
 62  15  49
 62  13  36
 62  11  25
 62   9  16
 62   7   9
 62   5   4
 62   3   1
 61  60 870
 61  58 812
 61  56 756
 61  54 702
 61  52 650
 61  50 600
 61  48 552
 61  46 506
 61  44 462
 61  42 420
 61  40 380
 61  38 342
 61  36 306
 61  34 272
 61  32 240
 61  30 210
 61  28 182
 61  26 156
 61  24 132
 61  22 110
 61  20  90
 61  18  72
 61  16  56
 61  14  42
 61  12  30
 61  10  20
 61   8  12
 61   6   6
 61   4   2
 60  59 841
 60  57 784
 60  55 729
 60  53 676
 60  51 625
 60  49 576
 60  47 529
 60  45 484
 60  43 441
 60  41 400
 60  39 361
 60  37 324
 60  35 289
 60  33 256
 60  31 225
 60  29 196
 60  27 169
 60  25 144
 60  23 121
 60  21 100
 60  19  81
 60  17  64
 60  15  49
 60  13  36
 60  11  25
 60   9  16
 60   7   9
 60   5   4
 60   3   1
 59  58 812
 59  56 756
 59  54 702
 59  52 650
 59  50 600
 59  48 552
 59  46 506
 59  44 462
 59  42 420
 59  40 380
 59  38 342
 59  36 306
 59  34 272
 59  32 240
 59  30 210
 59  28 182
 59  26 156
 59  24 132
 59  22 110
 59  20  90
 59  18  72
 59  16  56
 59  14  42
 59  12  30
 59  10  20
 59   8  12
 59   6   6
 59   4   2
 58  57 784
 58  55 729
 58  53 676
 58  51 625
 58  49 576
 58  47 529
 58  45 484
 58  43 441
 58  41 400
 58  39 361
 58  37 324
 58  35 289
 58  33 256
 58  31 225
 58  29 196
 58  27 169
 58  25 144
 58  23 121
 58  21 100
 58  19  81
 58  17  64
 58  15  49
 58  13  36
 58  11  25
 58   9  16
 58   7   9
 58   5   4
 58   3   1
 57  56 756
 57  54 702
 57  52 650
 57  50 600
 57  48 552
 57  46 506
 57  44 462
 57  42 420
 57  40 380
 57  38 342
 57  36 306
 57  34 272
 57  32 240
 57  30 210
 57  28 182
 57  26 156
 57  24 132
 57  22 110
 57  20  90
 57  18  72
 57  16  56
 57  14  42
 57  12  30
 57  10  20
 57   8  12
 57   6   6
 57   4   2
 56  55 729
 56  53 676
 56  51 625
 56  49 576
 56  47 529
 56  45 484
 56  43 441
 56  41 400
 56  39 361
 56  37 324
 56  35 289
 56  33 256
 56  31 225
 56  29 196
 56  27 169
 56  25 144
 56  23 121
 56  21 100
 56  19  81
 56  17  64
 56  15  49
 56  13  36
 56  11  25
 56   9  16
 56   7   9
 56   5   4
 56   3   1
 55  54 702
 55  52 650
 55  50 600
 55  48 552
 55  46 506
 55  44 462
 55  42 420
 55  40 380
 55  38 342
 55  36 306
 55  34 272
 55  32 240
 55  30 210
 55  28 182
 55  26 156
 55  24 132
 55  22 110
 55  20  90
 55  18  72
 55  16  56
 55  14  42
 55  12  30
 55  10  20
 55   8  12
 55   6   6
 55   4   2
 54  53 676
 54  51 625
 54  49 576
 54  47 529
 54  45 484
 54  43 441
 54  41 400
 54  39 361
 54  37 324
 54  35 289
 54  33 256
 54  31 225
 54  29 196
 54  27 169
 54  25 144
 54  23 121
 54  21 100
 54  19  81
 54  17  64
 54  15  49
 54  13  36
 54  11  25
 54   9  16
 54   7   9
 54   5   4
 54   3   1
 53  52 650
 53  50 600
 53  48 552
 53  46 506
 53  44 462
 53  42 420
 53  40 380
 53  38 342
 53  36 306
 53  34 272
 53  32 240
 53  30 210
 53  28 182
 53  26 156
 53  24 132
 53  22 110
 53  20  90
 53  18  72
 53  16  56
 53  14  42
 53  12  30
 53  10  20
 53   8  12
 53   6   6
 53   4   2
 52  51 625
 52  49 576
 52  47 529
 52  45 484
 52  43 441
 52  41 400
 52  39 361
 52  37 324
 52  35 289
 52  33 256
 52  31 225
 52  29 196
 52  27 169
 52  25 144
 52  23 121
 52  21 100
 52  19  81
 52  17  64
 52  15  49
 52  13  36
 52  11  25
 52   9  16
 52   7   9
 52   5   4
 52   3   1
 51  50 600
 51  48 552
 51  46 506
 51  44 462
 51  42 420
 51  40 380
 51  38 342
 51  36 306
 51  34 272
 51  32 240
 51  30 210
 51  28 182
 51  26 156
 51  24 132
 51  22 110
 51  20  90
 51  18  72
 51  16  56
 51  14  42
 51  12  30
 51  10  20
 51   8  12
 51   6   6
 51   4   2
 50  49 576
 50  47 529
 50  45 484
 50  43 441
 50  41 400
 50  39 361
 50  37 324
 50  35 289
 50  33 256
 50  31 225
 50  29 196
 50  27 169
 50  25 144
 50  23 121
 50  21 100
 50  19  81
 50  17  64
 50  15  49
 50  13  36
 50  11  25
 50   9  16
 50   7   9
 50   5   4
 50   3   1
 49  48 552
 49  46 506
 49  44 462
 49  42 420
 49  40 380
 49  38 342
 49  36 306
 49  34 272
 49  32 240
 49  30 210
 49  28 182
 49  26 156
 49  24 132
 49  22 110
 49  20  90
 49  18  72
 49  16  56
 49  14  42
 49  12  30
 49  10  20
 49   8  12
 49   6   6
 49   4   2
 48  47 529
 48  45 484
 48  43 441
 48  41 400
 48  39 361
 48  37 324
 48  35 289
 48  33 256
 48  31 225
 48  29 196
 48  27 169
 48  25 144
 48  23 121
 48  21 100
 48  19  81
 48  17  64
 48  15  49
 48  13  36
 48  11  25
 48   9  16
 48   7   9
 48   5   4
 48   3   1
 47  46 506
 47  44 462
 47  42 420
 47  40 380
 47  38 342
 47  36 306
 47  34 272
 47  32 240
 47  30 210
 47  28 182
 47  26 156
 47  24 132
 47  22 110
 47  20  90
 47  18  72
 47  16  56
 47  14  42
 47  12  30
 47  10  20
 47   8  12
 47   6   6
 47   4   2
 46  45 484
 46  43 441
 46  41 400
 46  39 361
 46  37 324
 46  35 289
 46  33 256
 46  31 225
 46  29 196
 46  27 169
 46  25 144
 46  23 121
 46  21 100
 46  19  81
 46  17  64
 46  15  49
 46  13  36
 46  11  25
 46   9  16
 46   7   9
 46   5   4
 46   3   1
 45  44 462
 45  42 420
 45  40 380
 45  38 342
 45  36 306
 45  34 272
 45  32 240
 45  30 210
 45  28 182
 45  26 156
 45  24 132
 45  22 110
 45  20  90
 45  18  72
 45  16  56
 45  14  42
 45  12  30
 45  10  20
 45   8  12
 45   6   6
 45   4   2
 44  43 441
 44  41 400
 44  39 361
 44  37 324
 44  35 289
 44  33 256
 44  31 225
 44  29 196
 44  27 169
 44  25 144
 44  23 121
 44  21 100
 44  19  81
 44  17  64
 44  15  49
 44  13  36
 44  11  25
 44   9  16
 44   7   9
 44   5   4
 44   3   1
 43  42 420
 43  40 380
 43  38 342
 43  36 306
 43  34 272
 43  32 240
 43  30 210
 43  28 182
 43  26 156
 43  24 132
 43  22 110
 43  20  90
 43  18  72
 43  16  56
 43  14  42
 43  12  30
 43  10  20
 43   8  12
 43   6   6
 43   4   2
 42  41 400
 42  39 361
 42  37 324
 42  35 289
 42  33 256
 42  31 225
 42  29 196
 42  27 169
 42  25 144
 42  23 121
 42  21 100
 42  19  81
 42  17  64
 42  15  49
 42  13  36
 42  11  25
 42   9  16
 42   7   9
 42   5   4
 42   3   1
 41  40 380
 41  38 342
 41  36 306
 41  34 272
 41  32 240
 41  30 210
 41  28 182
 41  26 156
 41  24 132
 41  22 110
 41  20  90
 41  18  72
 41  16  56
 41  14  42
 41  12  30
 41  10  20
 41   8  12
 41   6   6
 41   4   2
 40  39 361
 40  37 324
 40  35 289
 40  33 256
 40  31 225
 40  29 196
 40  27 169
 40  25 144
 40  23 121
 40  21 100
 40  19  81
 40  17  64
 40  15  49
 40  13  36
 40  11  25
 40   9  16
 40   7   9
 40   5   4
 40   3   1
 39  38 342
 39  36 306
 39  34 272
 39  32 240
 39  30 210
 39  28 182
 39  26 156
 39  24 132
 39  22 110
 39  20  90
 39  18  72
 39  16  56
 39  14  42
 39  12  30
 39  10  20
 39   8  12
 39   6   6
 39   4   2
 38  37 324
 38  35 289
 38  33 256
 38  31 225
 38  29 196
 38  27 169
 38  25 144
 38  23 121
 38  21 100
 38  19  81
 38  17  64
 38  15  49
 38  13  36
 38  11  25
 38   9  16
 38   7   9
 38   5   4
 38   3   1
 37  36 306
 37  34 272
 37  32 240
 37  30 210
 37  28 182
 37  26 156
 37  24 132
 37  22 110
 37  20  90
 37  18  72
 37  16  56
 37  14  42
 37  12  30
 37  10  20
 37   8  12
 37   6   6
 37   4   2
 36  35 289
 36  33 256
 36  31 225
 36  29 196
 36  27 169
 36  25 144
 36  23 121
 36  21 100
 36  19  81
 36  17  64
 36  15  49
 36  13  36
 36  11  25
 36   9  16
 36   7   9
 36   5   4
 36   3   1
 35  34 272
 35  32 240
 35  30 210
 35  28 182
 35  26 156
 35  24 132
 35  22 110
 35  20  90
 35  18  72
 35  16  56
 35  14  42
 35  12  30
 35  10  20
 35   8  12
 35   6   6
 35   4   2
 34  33 256
 34  31 225
 34  29 196
 34  27 169
 34  25 144
 34  23 121
 34  21 100
 34  19  81
 34  17  64
 34  15  49
 34  13  36
 34  11  25
 34   9  16
 34   7   9
 34   5   4
 34   3   1
 33  32 240
 33  30 210
 33  28 182
 33  26 156
 33  24 132
 33  22 110
 33  20  90
 33  18  72
 33  16  56
 33  14  42
 33  12  30
 33  10  20
 33   8  12
 33   6   6
 33   4   2
 32  31 225
 32  29 196
 32  27 169
 32  25 144
 32  23 121
 32  21 100
 32  19  81
 32  17  64
 32  15  49
 32  13  36
 32  11  25
 32   9  16
 32   7   9
 32   5   4
 32   3   1
 31  30 210
 31  28 182
 31  26 156
 31  24 132
 31  22 110
 31  20  90
 31  18  72
 31  16  56
 31  14  42
 31  12  30
 31  10  20
 31   8  12
 31   6   6
 31   4   2
 30  29 196
 30  27 169
 30  25 144
 30  23 121
 30  21 100
 30  19  81
 30  17  64
 30  15  49
 30  13  36
 30  11  25
 30   9  16
 30   7   9
 30   5   4
 30   3   1
 29  28 182
 29  26 156
 29  24 132
 29  22 110
 29  20  90
 29  18  72
 29  16  56
 29  14  42
 29  12  30
 29  10  20
 29   8  12
 29   6   6
 29   4   2
 28  27 169
 28  25 144
 28  23 121
 28  21 100
 28  19  81
 28  17  64
 28  15  49
 28  13  36
 28  11  25
 28   9  16
 28   7   9
 28   5   4
 28   3   1
 27  26 156
 27  24 132
 27  22 110
 27  20  90
 27  18  72
 27  16  56
 27  14  42
 27  12  30
 27  10  20
 27   8  12
 27   6   6
 27   4   2
 26  25 144
 26  23 121
 26  21 100
 26  19  81
 26  17  64
 26  15  49
 26  13  36
 26  11  25
 26   9  16
 26   7   9
 26   5   4
 26   3   1
 25  24 132
 25  22 110
 25  20  90
 25  18  72
 25  16  56
 25  14  42
 25  12  30
 25  10  20
 25   8  12
 25   6   6
 25   4   2
 24  23 121
 24  21 100
 24  19  81
 24  17  64
 24  15  49
 24  13  36
 24  11  25
 24   9  16
 24   7   9
 24   5   4
 24   3   1
 23  22 110
 23  20  90
 23  18  72
 23  16  56
 23  14  42
 23  12  30
 23  10  20
 23   8  12
 23   6   6
 23   4   2
 22  21 100
 22  19  81
 22  17  64
 22  15  49
 22  13  36
 22  11  25
 22   9  16
 22   7   9
 22   5   4
 22   3   1
 21  20  90
 21  18  72
 21  16  56
 21  14  42
 21  12  30
 21  10  20
 21   8  12
 21   6   6
 21   4   2
 20  19  81
 20  17  64
 20  15  49
 20  13  36
 20  11  25
 20   9  16
 20   7   9
 20   5   4
 20   3   1
 19  18  72
 19  16  56
 19  14  42
 19  12  30
 19  10  20
 19   8  12
 19   6   6
 19   4   2
 18  17  64
 18  15  49
 18  13  36
 18  11  25
 18   9  16
 18   7   9
 18   5   4
 18   3   1
 17  16  56
 17  14  42
 17  12  30
 17  10  20
 17   8  12
 17   6   6
 17   4   2
 16  15  49
 16  13  36
 16  11  25
 16   9  16
 16   7   9
 16   5   4
 16   3   1
 15  14  42
 15  12  30
 15  10  20
 15   8  12
 15   6   6
 15   4   2
 14  13  36
 14  11  25
 14   9  16
 14   7   9
 14   5   4
 14   3   1
 13  12  30
 13  10  20
 13   8  12
 13   6   6
 13   4   2
 12  11  25
 12   9  16
 12   7   9
 12   5   4
 12   3   1
 11  10  20
 11   8  12
 11   6   6
 11   4   2
 10   9  16
 10   7   9
 10   5   4
 10   3   1
  9   8  12
  9   6   6
  9   4   2
  8   7   9
  8   5   4
  8   3   1
  7   6   6
  7   4   2
  6   5   4
  6   3   1
  5   4   2
  4   3   1
We can put  1024.0 different one snakes if the checkboard size is  8
We can put  169136 different two snakes if the checkboard size is  8

"""



def factorial(n):
   factorial_n = 1
   n=int(n)
   for i in range(1,n+1):
     factorial_n = factorial_n*i
   return factorial_n

def n_choose_2(n):
   # using formular here
   # https://en.wikipedia.org/wiki/Binomial_coefficient
   if n<2: return 0
   return factorial(n)/(factorial(n-2)*factorial(2))
     

def get_number_for_one_snake(number_grids):
   # given number of grids available, output how many snakes can be put under the constrains that the head can not have the same color as the tail
   # it has two cases, the number of grids is even and the number of grids is odd
   if number_grids%2==0:
     half_number_grids = number_grids/2
     result = n_choose_2(number_grids) - 2*n_choose_2(half_number_grids)
   else:
     half_number_grids = (number_grids-1)/2
     result = n_choose_2(number_grids-1) - 2*n_choose_2(half_number_grids)
     result += half_number_grids
   return result
def get_number_for_two_snake(number_grids):
   result = []
   print('snake1_head, snake1_tail, counter_snake2')
   for head in range(number_grids,2,-1):
     for tail in range(head-1,2,-1):
       # if they have different color
       if head%2 != tail%2:
         rest_number_of_grids = tail-1
         how_many_possible_of_putting_the_second_snake= get_number_for_one_snake(rest_number_of_grids)
         result.append(int(how_many_possible_of_putting_the_second_snake))
         print('{:3d} {:3d} {:3d}'.format( head, tail,int(how_many_possible_of_putting_the_second_snake)))
   return sum(result)

if __name__ == '__main__':
  grid_size_n = 2
  grid_size_n =  int(input("Enter the checkboard size n: "))
  number_grids = grid_size_n*grid_size_n
  one_snake_result =  get_number_for_one_snake(number_grids)
  two_snake_result =  get_number_for_two_snake(number_grids)
  print('We can put ', one_snake_result, 'different one snakes if the checkboard size is ', grid_size_n)
  print('We can put ', two_snake_result, 'different two snakes if the checkboard size is ', grid_size_n)

     
   
